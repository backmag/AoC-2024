namespace AoC_2024.Solutions.Day08
{
    public class SolverTest
    {
        [Fact]
        public void TestPartOne()
        {
            var input = InputService.SplitToArray(@"............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............");
            var expected = 14;

            SolverDay8 solver = new(new InputService(input));
            var actual = solver.SolvePartOne();

            Assert.Equal(expected, actual);
        }

        [Fact]
        public void TestReadingAntenna()
        {
            var input = InputService.SplitToArray(@"............
........0...
............");

            var actualAntennas = SolverDay8.ReadAntennas(input);

            var expectedCount = 1;
            var expectedX = 8;
            var expectedY = 1;
            var expectedFrequency = '0';

            Assert.Equal(expectedCount, actualAntennas.Count());
            Assert.Equal(expectedX, actualAntennas.First().PosX);
            Assert.Equal(expectedY, actualAntennas.First().PosY);
            Assert.Equal(expectedFrequency, actualAntennas.First().Frequency);
        }

        [Fact]
        public void TestPartTwo()
        {
            var input = InputService.SplitToArray(@"............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............");

            var expected = 34;

            SolverDay8 solver = new(new InputService(input));
            var actual = solver.SolvePartTwo();

            Assert.Equal(expected, actual);
        }
    }
}
